extends _layout

block content

  h1 Create New Account

  form(v-on:submit="user.signup"  v-bind:class="{loading: user.signupForm.loading}" class="signup-form" v-if="user.signupForm.messages")

    if !homeschoolSignup
      .toggle
        a(v-on:click="user.signupForm.type = 'student'" v-bind:class="{active: user.signupForm.type === 'student'}") Student
        a(v-on:click="user.signupForm.type = 'teacher'" v-bind:class="{active: user.signupForm.type === 'teacher'}") Teacher
        a(v-on:click="user.signupForm.type = 'parent'" v-bind:class="{active: user.signupForm.type === 'parent'}") Parent

    .error(v-show="user.signupForm.error" style="margin-top: .5em") {{user.signupForm.error}}

    label
      span {{user.signupForm.messages[user.signupForm.type].firstName}}
      input(type="text" required v-model="user.signupForm.first" autocomplete="given-name")

    label
      span {{user.signupForm.messages[user.signupForm.type].surname}}
      input(type="text" required v-model="user.signupForm.last" autocomplete="family-name")

    label
      span {{user.signupForm.messages[user.signupForm.type].email}}
      br
      div(class="info" v-if="user.signupForm.messages[user.signupForm.type].emailSubtext") {{user.signupForm.messages[user.signupForm.type].emailSubtext}}
      input(type="email" required v-model="user.signupForm.email" autocomplete="email")

    label(v-if="user.signupForm.type !== 'teacher'")
      span {{user.signupForm.messages[user.signupForm.type].emailQuestion}}
      div(style="text-align: center")
        input(type='radio' class="signup-radio" v-model="user.signupForm.primaryEmailType" value='student')#is-student-email-student
        label(class="radio-label" for="is-student-email-student") {{user.signupForm.messages[user.signupForm.type].emailQuestionStudent}}
        input(type='radio' class="signup-radio" v-model="user.signupForm.primaryEmailType" value='parent')#is-student-email-parent
        label(class="radio-label" for="is-student-email-parent") A Parent's

    label
      span Password
      div(class="info") (min 6 characters)
      input(type="password" required pattern=".{6,}" v-model="user.signupForm.password" autocomplete="password")

    label(v-if="user.signupForm.type !== 'teacher'")
      span {{user.signupForm.messages[user.signupForm.type].teacherCode}}
      div(class="info") {{user.signupForm.messages[user.signupForm.type].teacherCodeSubtext}}
      input(type="text" v-model="user.signupForm.teacherCode")

    label(v-if="user.signupForm.type !== 'teacher'")
      span {{user.signupForm.messages[user.signupForm.type].yearGroup}}
      select(v-model="user.signupForm.level")
        option(value="year5") Year 5 (age 9 or below)
        option(value="year6") Year 6 (age 10-11)
        option(value="year7") Year 7 (age 11-12)
        option(value="year8") Year 8 (age 12–13)
        option(value="year9") Year 9 (age 13–14)
        option(value="year10") Year 10 (age 14–15)
        option(value="year11") Year 11 (age 15-16)
        option(value="year12") Year 12  (age 16-17)
        option(value="year13") Year 13 (age 17 or above)

    label(v-if="user.signupForm.type === 'homeschool_student'")
      span {{user.signupForm.messages[user.signupForm.type].monthOfBirth}}
      select(v-model="user.signupForm.birthMonth" required)
        option(value="1") January
        option(value="2") February
        option(value="3") March
        option(value="4") April
        option(value="5") May
        option(value="6") June
        option(value="7") July
        option(value="8") August
        option(value="9") September
        option(value="10") October
        option(value="11") November
        option(value="12") December

    label(v-if="user.signupForm.type !== 'teacher' && !user.signupForm.teacherCode")
      span {{user.signupForm.messages[user.signupForm.type].yearOfBirth}}
      select(v-model="user.signupForm.birthYear")
        - var year = 1920;
        while year < 2019
          option= year++

    label(v-if="user.signupForm.type === 'teacher'")
      span School Name
      input(type="text" v-model="user.signupForm.schoolName" required)

    label(v-if="user.signupForm.type === 'teacher'")
      span School Post Code
      input(type="text" v-model="user.signupForm.postCode" required)

    label(v-if="user.signupForm.type === 'teacher'")
      span School Phone Number
      input(type="text" v-model="user.signupForm.phoneNumber" required)

    //- TODO Calculate the age dynamically
    label(v-if="user.signupForm.type !== 'teacher' && !user.signupForm.teacherCode && user.signupForm.birthYear >= 2009 && user.signupForm.primaryEmailType !== 'parent'")
      span {{user.signupForm.messages[user.signupForm.type].emailOfParent}}
      div(class="info") {{user.signupForm.messages[user.signupForm.type].emailOfParentSubtext}}


      input(type="email" v-model="user.signupForm.guardianEmail" required)

    p.checkbox
      input#terms(type="checkbox" required)
      label(for="terms") We will email you when a new Parallelogram challenge is released, when the next Parallel Circles session is scheduled, and when there are special competitions, prizes and opportunities. By checking this box you consent to receiving these emails, in accordance with our #[a(href="/terms-and-conditions" target="_blank") Data Protection Terms & Conditions].

    button(type="submit") Sign up

    if !homeschoolSignup
      p(class="homeschool-signup-text") If you're homeschooled, #[a(href="mailto:contact@parallel.org.uk" target="_blank") contact us to find out how to create an account.]
