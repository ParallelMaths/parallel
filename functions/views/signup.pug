extends _layout

block content

  h1 Create New Account

  form(v-on:submit="user.signup"  v-bind:class="{loading: user.signupForm.loading}" class="signup-form" v-if="user.signupForm.messages")

    .toggle
      a(v-on:click="user.signupForm.type = 'student'" v-bind:class="{active: user.signupForm.type === 'student'}") Student
      if !studentSignupOnly
        a(href="/teacher/signup") Teacher

    .error(v-show="user.signupForm.error" style="margin-top: .5em") {{user.signupForm.error}}

    script!= 'window.SIGNUP_SOURCE = ' + JSON.stringify(signupSource) + ';'

    label
      span {{user.signupForm.messages[user.signupForm.type].firstName}}
      input(type="text" required v-model="user.signupForm.first" autocomplete="given-name")

    label
      span {{user.signupForm.messages[user.signupForm.type].surname}}
      input(type="text" required v-model="user.signupForm.last" autocomplete="family-name")

    label
      span {{user.signupForm.messages[user.signupForm.type].email}}
      br
      div(class="info" v-if="user.signupForm.messages[user.signupForm.type].emailSubtext") {{user.signupForm.messages[user.signupForm.type].emailSubtext}}
      input(type="email" required v-model="user.signupForm.email" autocomplete="email")

    label(v-if="user.signupForm.type !== 'teacher'")
      span {{user.signupForm.messages[user.signupForm.type].emailQuestion}}
      div(style="text-align: center")
        input(type='radio' class="signup-radio" v-model="user.signupForm.primaryEmailType" value='student')#is-student-email-student
        label(class="radio-label" for="is-student-email-student") {{user.signupForm.messages[user.signupForm.type].emailQuestionStudent}}
        input(type='radio' class="signup-radio" v-model="user.signupForm.primaryEmailType" value='parent')#is-student-email-parent
        label(class="radio-label" for="is-student-email-parent") A Parent's

    label(v-if="user.signupForm.type !== 'teacher' && user.isUnderThirteen(user.signupForm.birthYear, user.signupForm.birthMonth) && user.signupForm.primaryEmailType !== 'parent'")
      span {{user.signupForm.messages[user.signupForm.type].parentsEmail}}
      div(class="info") {{user.signupForm.messages[user.signupForm.type].parentsEmailSubtext}}
      input(type="email" v-model="user.signupForm.guardianEmail")

    label
      span Password
      div(class="info") (min 6 characters)
      input(type="password" required pattern=".{6,}" v-model="user.signupForm.password" autocomplete="password")

    label(v-if="user.signupForm.type !== 'teacher'")
      span {{user.signupForm.messages[user.signupForm.type].teacherCode}}
      div(class="info") {{user.signupForm.messages[user.signupForm.type].teacherCodeSubtext}}
      input(type="text" v-model="user.signupForm.teacherCode")

    label(v-if="user.signupForm.type !== 'teacher'")
      span {{user.signupForm.messages[user.signupForm.type].monthOfBirth}}
      select(v-model="user.signupForm.birthMonth" required)
        option(value="1") January
        option(value="2") February
        option(value="3") March
        option(value="4") April
        option(value="5") May
        option(value="6") June
        option(value="7") July
        option(value="8") August
        option(value="9") September
        option(value="10") October
        option(value="11") November
        option(value="12") December

    label(v-if="user.signupForm.type !== 'teacher'")
      span {{user.signupForm.messages[user.signupForm.type].yearOfBirth}}
      select(v-model="user.signupForm.birthYear")
        - var year = 1920;
        while year < 2024
          option= year++

    label(v-if="user.signupForm.type === 'teacher'")
      span School Name
      input(type="text" v-model="user.signupForm.schoolName" required)

    label(v-if="user.signupForm.type === 'teacher'")
      span School Post Code
      input(type="text" v-model="user.signupForm.postCode" required)

    label(v-if="user.signupForm.type === 'teacher'")
      span School Phone Number
      input(type="text" v-model="user.signupForm.phoneNumber" required)

    //- TODO Calculate the age dynamically
    label(v-if="user.signupForm.type !== 'teacher' && !user.signupForm.teacherCode && user.isUnderThirteen(user.signupForm.birthYear, user.signupForm.birthMonth) && user.signupForm.primaryEmailType !== 'parent'")
      span {{user.signupForm.messages[user.signupForm.type].emailOfParent}}
      div(class="info") {{user.signupForm.messages[user.signupForm.type].emailOfParentSubtext}}
      input(type="email" v-model="user.signupForm.guardianEmail" required)

    p.checkbox(v-if="!user.isUnderThirteen(user.signupForm.birthYear, user.signupForm.birthMonth)")
      input#terms(type="checkbox" required)
      label(for="terms") We will email you with updates on Parallelograms, Parallel Circles and other offerings from Parallel. By checking this box you consent to receiving these emails, and also confirm that you have read and accept our #[a(href="/privacy-notice" target="_blank") Privacy Notice].

    p(class="under13Terms" v-if="user.isUnderThirteen(user.signupForm.birthYear, user.signupForm.birthMonth)") As this student is under the age of 13, we require a parent or guardian to read and accept our Privacy Notice. We will be in touch via the parent/guardian email address you have provided above. The Privacy Notice will need to be accepted within 7 days and the student can continue to access the Parallel website in the meantime.

    button(type="submit") Sign up
