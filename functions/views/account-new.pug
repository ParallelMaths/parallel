extends _layout

block content
  div(style="font-size: 12px; margin-bottom: 2rem")

  h1 Account Settings

  form(v-on:submit="user.editNew"  v-bind:class="{loading: user.editFormNew.loading}" class="edit-account-form")
    .error(v-show="user.editFormNew.error" style="margin-top: .5em") {{user.editFormNew.error}}

    script!= 'window.USER_DATA = ' + JSON.stringify(user) + ';'

    script!= 'window.COUNTRY_CODES = ' + JSON.stringify(countries) + ';'

    label
      | First Name
      input(type="text" v-model="user.editFormNew.first")

    label
      | Surname
      input(type="text" v-model="user.editFormNew.last")

    if user.code
      //- Teacher Account Fields
      label
        | School Name
        input(type="text" v-model="user.editFormNew.schoolName")

      label
        | School Post Code
        input(type="text" v-model="user.editFormNew.postCode")

      label
        | Phone Number
        input(type="text" v-model="user.editFormNew.phoneNumber")

    else
      //- Student Account Fields
      label
        | Teacher codes
        vue-tags-input#ti(v-model="user.editFormNew.teacherCode" :tags="user.editFormNew.teacherCodes" @tags-changed="t => user.editFormNew.teacherCodes = t" placeholder="Add Code")

      label
        | Year
        select(v-model="user.editFormNew.level")
          option(value="year5") Year 5 (age 9 or below)
          option(value="year6") Year 6 (age 10-11)
          option(value="year7") Year 7 (age 11-12)
          option(value="year8") Year 8 (age 12–13)
          option(value="year9") Year 9 (age 13–14)
          option(value="year10") Year 10 (age 14–15)
          option(value="year11") Year 11 (age 15-16)
          option(value="year12") Year 12  (age 16-17)
          option(value="year13") Year 13 (age 17 or above)
          option(value="graduated") Graduated

      label
        | Email
        input(type="text" v-model="user.editFormNew.email" disabled)
      
      label
        | Guardian Email
        div(class="info" v-if="user.editFormNew.birthYear >= 2009") {{user.signupForm.messages[user.signupForm.type].emailOfParentSubtext}}
        input(type="text" v-model="user.editFormNew.guardianEmail" :required="user.editFormNew.birthYear >= 2009")

      button(type="submit") Update
      
      h2(v-if="!user.editFormNew.profileComplete") Complete your profile to access terrific bonus Parallel opportunities

      h2(v-if="user.editFormNew.profileComplete") Congrats, you’re all set! Do make sure to update your info whenever it changes.

      p(v-if="!user.editFormNew.profileComplete") Parallel offers students lots of exciting rewards and opportunities, such as prizes, special events for your school, exclusive access to special Parallel features and events, certificates, diplomas and the chance to appear on screen during our mathematics circles as part of our Student Panel. To qualify for all this good stuff, you just need to complete the information below.

      div(class="input-other-wrapper")
        label
          | Month of Birth
          select(v-model="user.editFormNew.birthMonth" :required="user.editFormNew.studentPanelConsidered === '1'")
            option(value="1") January
            option(value="2") February
            option(value="3") March
            option(value="4") April
            option(value="5") May
            option(value="6") June
            option(value="7") July
            option(value="8") August
            option(value="9") September
            option(value="10") October
            option(value="11") November
            option(value="12") December
        label
          | Year of Birth:
          select(v-model="user.editFormNew.birthYear" required)
            - var year = 1920;
            while year < 2019
              option= year++

      div(class="input-other-wrapper")
        label(v-bind:class="{'input-other-two-span': user.editFormNew.gender !== 'other'}")
          | Gender
          select(v-model="user.editFormNew.gender" :required="user.editFormNew.studentPanelConsidered === '1'")
            option(value="001_male") Male
            option(value="002_female") Female
            option(value="003_non_binary") Non-binary
            option(value="other") Other
            option(value="000_prefer_not_to_say") Prefer not to say
        label(v-if="user.editFormNew.gender === 'other'")
          | Other:
          input(type="text" v-model="user.editFormNew.otherGender" :required="user.editFormNew.studentPanelConsidered === '1'")

      div(class="input-other-wrapper")
        label(v-bind:class="{'input-other-two-span': user.editFormNew.ethnicity !== 'other'}")
          | Ethnicity
          select(v-model="user.editFormNew.ethnicity" :required="user.editFormNew.studentPanelConsidered === '1'")
            option(value="001_asian_or_asian_british") Asian or Asian British
            option(value="002_black_black_british_caribbean_or_african") Black, Black British, Caribbean or African
            option(value="003_white") White
            option(value="other") Other
            option(value="000_prefer_not_to_say") Prefer not to say
        label(v-if="user.editFormNew.ethnicity === 'other'")
          | Other:
          input(type="text" v-model="user.editFormNew.otherEthnicity" :required="user.editFormNew.studentPanelConsidered === '1'")

      div(class="input-other-wrapper")
        label(v-bind:class="{'input-other-two-span': user.editFormNew.country !== 'GB'}")
          | Country
          select(v-model="user.editFormNew.country" :required="user.editFormNew.studentPanelConsidered === '1'")
            option(value="GB") United Kingdom
            option(v-for="(code, name) in user.editFormNew.countries" :value="name") {{ code }}
        label(v-if="user.editFormNew.country === 'GB'")
          | Country
          select(v-model="user.editFormNew.ukCountry" :required="user.editFormNew.studentPanelConsidered === '1'")
            option(value="england") England
            option(value="scotland") Scotland
            option(value="wales") Wales
            option(value="northernIreland") Northern Ireland

      p.checkbox(v-if="!!user.editFormNew.ukCountry && user.editFormNew.country === 'GB'")
        input#pupilPremium(type="checkbox" v-model="user.editFormNew.pupilPremium")
        label(for="pupilPremium" v-if="user.editFormNew.ukCountry === 'england'") Do you qualify for Pupil Premium funding?
        label(for="pupilPremium" v-if="user.editFormNew.ukCountry === 'wales'") Do you qualify for Pupil Premium funding?
        label(for="pupilPremium" v-if="user.editFormNew.ukCountry === 'northernIreland'") Do you qualify for Pupil Premium funding?
        label(for="pupilPremium" v-if="user.editFormNew.ukCountry === 'scotland'") Do you qualify for Pupil Equity Fund?

      h3(v-if="!user.editFormNew.homeEducated") About your school
      h3(v-if="user.editFormNew.homeEducated") About your home education 

      div(class="home-educated")
        span(class="bold") If you are home-educated, 
        span please confirm that this is the case by ticking the box and asking a parent to complete the form in the link below.
        br 
        p.checkbox
          input#homeEducated(type="checkbox" v-model="user.editFormNew.homeEducated")
          label(for="homeEducated") 
            | I can confirm that I am home-educated and I would like to complete the home-education form 
            a(href="/home-educator-form") here

      div(v-if="!user.editFormNew.homeEducated")
        label
          | School Name
          input(type="text" v-model="user.editFormNew.schoolName" :required="user.editFormNew.studentPanelConsidered === '1'")

        label(v-if="user.editFormNew.country === 'GB'")
          | School postcode
          input(type="text" v-model="user.editFormNew.schoolPostcode" :required="user.editFormNew.studentPanelConsidered === '1'")

        label
          span Email address for a school contact
          br
          div(class="info") (Ideally your maths teacher, but it could also be your form tutor or head of maths. Make sure you have their permission before sharing this)
          input(type="email" v-model="user.editFormNew.schoolEmail" :required="user.editFormNew.studentPanelConsidered === '1'")

      h3 Student Panel

      label
        | Would you like to be considered to appear on screen during Parallel Circles?
        select(v-model="user.editFormNew.studentPanelConsidered")
          option(value="1") Yes
          option(value="0") No
      
      label(v-if="user.editFormNew.studentPanelConsidered === '1'")
        | Guardian Email
        input(type="text" v-model="user.editFormNew.guardianEmail" :required="user.editFormNew.studentPanelConsidered === '1'")

    button(type="submit") Update

  hr
  h2 Change Password

  form(v-on:submit="user.password"  v-bind:class="{loading: user.passwordForm.loading}")
    .error(v-show="user.passwordForm.error" style="margin-top: .5em") {{user.passwordForm.error}}

    label
      | Old Password
      input(type="password" v-model="user.passwordForm.old" autocomplete="password" required)

    label
      | New Password
      input(type="password" pattern=".{6,}" v-model="user.passwordForm.new" autocomplete="new-password" required)

    button(type="submit") Update

  if user && !user.code && user.userReference
    p(style="font-size: 16px; text-align: center; color: #555; margin-top: 3rem;") Student Reference: #{user.userReference}
