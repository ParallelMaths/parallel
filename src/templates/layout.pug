doctype html
html
  head
    meta(charset="utf-8")
    meta(http-equiv="X-UA-Compatible" content="IE=edge")

    title Parallel by Simon Singh
    meta(name="description", content="Weekly mathematics challenges for secondary school students.")

    //- Mobile Display
    meta(name="viewport", content="width=device-width, initial-scale=1, user-scalable=no")
    meta(name="format-detection", content="telephone=no")
    meta(http-equiv="cleartype", content="on")
    meta(name="msapplication-tap-highlight" content="no")

    //- iOS Web Apps
    meta(name="apple-mobile-web-app-capable", content="yes")
    meta(name="apple-mobile-web-app-title" content="Parallel by Simon Singh")
    meta(name="apple-mobile-web-app-status-bar-style" content="black")

    //- Web Apps and Images
    meta(name="mobile-web-app-capable", content="yes")
    meta(name="mobile-web-app-title", content="Parallel")
    meta(name="theme-color", content="#181824")
    link(rel="manifest", href="/manifest.json")

    //- Stylesheets
    link(href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:400,600,300,400italic" rel="stylesheet")
    link(href="/parallel.css?v=3", rel="stylesheet")

  body
    #vue
      .header
        #menu(v-on:click="showSidebar=true")
          svg(width=24 height=24)
            rect(y=2 width=24 height=3 fill="white")
            rect(y=10 width=24 height=3 fill="white")
            rect(y=18 width=24 height=3 fill="white")

        a#logo(href="/" title="Home")

      #shadow(v-on:click="showSidebar=false" v-bind:class="{visible: showSidebar}")

      #container
        .sidebar(v-bind:class="{show: user.ready}")
          .sidebar-wrap(v-bind:class="{visible: showSidebar}")
            div(v-if="!user.data")
              .user: a(href="/signup") Create a free account
              .user
                a(v-on:click="login.show = !login.show") Login
                form.login(v-bind:class="{active: login.show}" v-on:submit="login.submit")
                  input(placeholder="Email" required type="email" v-model="login.email" autocomplete="email")
                  input(placeholder="Password" v-if="!login.reset" required type="password" v-model="login.password" autocomplete="current-password")
                  .error(v-show="login.error") {{login.error}}
                  p
                    button(type="submit") {{ login.reset ? 'Reset' : 'Login' }}
                    a(v-on:click="login.toggleReset()") {{ login.reset ? 'Back to login' : 'Reset password' }}
            .user.account(v-if="user.data")
              p {{ user.data.first }} {{user.data.last }}
              p.small
                span(v-if="user.data.schoolName") {{ user.data.schoolName }}&nbsp;&nbsp;•&nbsp;&nbsp;
                span(v-if="!user.data.isTeacher") {{ user.level == 'year7' ? 'Year 7' : 'Year 8' }}&nbsp;&nbsp;•&nbsp;&nbsp;
                a(v-on:click="user.logout") Logout
            .user(v-if="user.data && user.data.isTeacher"): a(href="/teachers") Teacher Dashboard
            .toggle(v-if="!user.data || user.data.isTeacher")
              a(v-on:click="user.level = 'year7'" v-bind:class="{active: user.level == 'year7'}") Year 7
              a(v-on:click="user.level = 'year8'" v-bind:class="{active: user.level == 'year8'}") Year 8
            nav
              a(v-for="p in pages[user.level]" v-bind:href="'/' + p.url" v-bind:class="{active: path==p.url}" v-if="user.getStatus(p) != 'locked'")
                .title-meta Week {{ p.week }}
                .title {{ p.title }}
                .status.open(v-if="user.getStatus(p) == 'open'") NEW
                .status.submitted(v-if="user.getStatus(p) == 'submitted'")
                .status.score(v-if="user.getStatus(p) == 'revealed'" v-bind:class="user.getLevel(p)") {{ user.getScore(p) }}%
              a(href="/introduction" v-bind:class="{active: path=='introduction'}")
                .title Introduction

        article(v-bind:class="c ? c.status : ''")
          block content
          if content
            div!= content

    footer
      a(href="/about") About
      | •
      a(href="/contact") Contact
      | •
      a(href="/terms-and-conditions") Terms and Conditions
      br
      | Created by
      a(href="http://goodthinkingsociety.org" target="_blank") #[img(src="/images/good-thinking.png" width=10 height=16)] Good Thinking Society
      | and
      a(href="https://mathigon.org") #[img(src="/images/mathigon.png" width=16 height=16)] Mathigon

    script var PAGES = !{pages};
    script(defer src="https://www.gstatic.com/firebasejs/4.1.1/firebase.js")
    script(defer src="https://cdnjs.cloudflare.com/ajax/libs/vue/2.5.9/vue.min.js")
    script(defer src="/parallel.js?v=3")

    script.
      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
      (i[r].q=i[r].q || []).push(arguments)},i[r].l=1 * new Date();a=s.createElement(o),
      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
      })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');
      ga('create', 'UA-37525836-7', 'auto');
      ga('send', 'pageview');
